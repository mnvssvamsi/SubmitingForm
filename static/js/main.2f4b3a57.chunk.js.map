{"version":3,"sources":["components/Navbar/Navbar.js","components/Form/Form.js","components/DisplayForm/display.js","App.js","index.js"],"names":["Navbar","className","to","Form","useState","name","setName","email","setEmail","phoneNo","setPhoneNo","gender","setGender","date","setDate","nameError","setNameError","emailError","setEmailError","phoneError","setPhoneError","onSubmit","e","preventDefault","console","log","test","formData","fetch","method","body","JSON","stringify","headers","then","response","json","responseData","alert","submitHandler","type","placeholder","onChange","target","value","style","color","pattern","onClick","required","disabled","Display","data","setData","useEffect","axios","get","loadedData","key","push","id","newData","map","row","Math","random","App","path","exact","component","ReactDOM","render","basename","window","location","pathname","document","getElementById"],"mappings":"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","file":"static/js/main.2f4b3a57.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Navbar.css'\r\nimport { Link } from 'react-router-dom'\r\nconst Navbar = () => {\r\n    return (\r\n        <nav>\r\n            <ul className='navbar'>\r\n                <li className='NavigationItem'><Link to='/'>Home</Link></li>\r\n                <li className='NavigationItem'><Link to='/details'>Customer Details</Link> </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React, {useState } from 'react'\r\n// import axios from 'axios'\r\n// import {Link} from 'react-router-dom'\r\nimport './Form.css'\r\nimport Navbar from '../Navbar/Navbar'\r\nconst Form= ()=> {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [phoneNo, setPhoneNo] = useState('')\r\n    const [gender, setGender] = useState('')\r\n    const [date, setDate] = useState('')\r\n    const [nameError, setNameError] = useState('')\r\n    const [emailError, setEmailError] = useState('')\r\n    const [phoneError, setPhoneError] = useState('')\r\n\r\n       \r\n    const submitHandler=(e)=> {\r\n        e.preventDefault();\r\n        console.log(name)\r\n        var nameText = name;\r\n        var nameRegx= /^[A-Za-z]+$/;\r\n        if(nameRegx.test(nameText)){\r\n            setNameError('')\r\n        }else{\r\n            setNameError('please enter a valid name')\r\n            return\r\n        }\r\n        var emailText = email;\r\n        var emailRegx= /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$/\r\n        if(emailRegx.test(emailText)){\r\n            setEmailError('')\r\n        }else{\r\n            setEmailError('please enter a valid email')\r\n            return\r\n        }\r\n        var phoneNoText = phoneNo;\r\n        var phoneRegx= /^\\d{10}$/;\r\n        if(phoneRegx.test(phoneNoText)){\r\n            setPhoneError('')\r\n        }else{\r\n            setPhoneError('please enter a valid phone Number')\r\n            return\r\n        }\r\n        let formData= {\r\n            name,\r\n            email,\r\n            phoneNo,\r\n            gender,\r\n            date\r\n        }\r\n            fetch('https://contact-form-69cba.firebaseio.com/details.json', {\r\n                method: 'POST',\r\n                body: JSON.stringify(formData),\r\n                headers: { 'Content-Type': 'application/json' }\r\n              })\r\n                .then(response => {\r\n                  return response.json();\r\n                })\r\n                .then(responseData => {\r\n                    console.log(responseData)\r\n                });\r\n                alert(\"Data submitted\")\r\n    }\r\n        return (\r\n            <div>\r\n                <Navbar />\r\n            <div className='ContactData'>\r\n                <h4>Enter your Contact Data</h4>\r\n                <form onSubmit={(e)=>submitHandler(e)} >\r\n                    <div className=\"Input\">\r\n                        <input className=\"InputElement\"\r\n                         type=\"text\" placeholder=\"Name\" name='name'\r\n                        //  pattern='/^[A-Za-z]+$/'\r\n                         onChange= {(e)=>{\r\n                             setNameError('')\r\n                             setName(e.target.value)\r\n                            }}\r\n                          value= {name}\r\n                        //    required\r\n                            />\r\n                            {nameError && <p style={{color:'red'}}>{nameError}</p>}\r\n                    </div>\r\n                    <div className=\"Input\">\r\n                        <input className=\"InputElement\" \r\n                        type=\"email\" placeholder=\" E-Mail\" name='email'\r\n                        pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\r\n                        onChange= {(e)=>{\r\n                            setEmailError('')\r\n                            setEmail(e.target.value)\r\n                        }}\r\n                         value={email} \r\n                        //  required\r\n                          />\r\n                        {emailError && <p style={{color:'red'}}>{emailError}</p>}\r\n                    </div>\r\n                    <div className=\"Input\">\r\n                        <input className=\"InputElement\" \r\n                        type=\"text\" placeholder=\"Phone number\" name='phoneNo'\r\n                        onChange= {(e)=> {\r\n                            setPhoneError('')\r\n                            setPhoneNo(e.target.value)\r\n                        }}\r\n                         value={phoneNo}\r\n                        //   required \r\n                          />\r\n                        {phoneError && <p style={{color:'red'}}>{phoneError}</p>}\r\n                    </div>\r\n                    <div className=\"Input\">\r\n                        <p>Please select your gender:</p>\r\n                        <input type=\"radio\" name=\"gender\"\r\n                        onClick={(e)=>setGender(e.target.value)} value=\"Male\" required />\r\n                        <label >Male</label>\r\n                        <input type=\"radio\" name=\"gender\" \r\n                        onClick={(e)=>setGender(e.target.value)} value=\"Female\" />\r\n                        <label >Female</label>\r\n                        <input type=\"radio\" name=\"gender\"\r\n                        onClick={(e)=>setGender(e.target.value)} value=\"Other\" />\r\n                        <label >Other</label>\r\n                    </div>\r\n                    <div className=\"Input\">\r\n                        <label>Date of Birth</label>\r\n                        <input  type=\"date\" name= 'date'\r\n                         onChange= {(e)=>setDate(e.target.value)}\r\n                         value={date}\r\n                         required\r\n                          />\r\n                    </div>\r\n                    <div>\r\n                            {/* <Link to='/' ><button className=\"Button\">SUBMIT</button></Link> */}\r\n                            <button className=\"Button\" disabled=\"\">SUBMIT</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Form","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport './display.css'\r\nimport Navbar from '../Navbar/Navbar';\r\nconst Display = () => {\r\n\r\n    const [data, setData] = useState([]);\r\n    useEffect(() => {\r\n        let api = 'https://contact-form-69cba.firebaseio.com/details.json'\r\n        axios.get(api)\r\n            .then(response => {\r\n                const loadedData = [];\r\n                for (const key in response.data) {\r\n                    loadedData.push({\r\n                        id: key,\r\n                        name: response.data[key].name,\r\n                        email: response.data[key].email,\r\n                        phoneNo: response.data[key].phoneNo,\r\n                        gender: response.data[key].gender,\r\n                        date: response.data[key].date\r\n                    });\r\n                }\r\n                console.log(loadedData)\r\n                setData(loadedData)\r\n            })\r\n    }, [])\r\n    let newData = data.map(row => (\r\n        <tr key={Math.random()} >\r\n            <td>{row.name}</td>\r\n            <td>{row[\"email\"]}</td>\r\n            <td>{row[\"phoneNo\"]}</td>\r\n            <td>{row[\"gender\"]}</td>\r\n            <td>{row[\"date\"]}</td>\r\n        </tr>\r\n    ))\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <table className=\"content-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Email</th>\r\n                        <th>Phone Number</th>\r\n                        <th>Gender</th>\r\n                        <th>Date of Birth</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {newData}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Display\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Form from './components/Form/Form';\r\nimport Display from './components/DisplayForm/display';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Switch>\r\n      <Route path='/' exact component={Form} />\r\n      <Route path='/details' component={Display} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter basename={window.location.pathname || ''}>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}